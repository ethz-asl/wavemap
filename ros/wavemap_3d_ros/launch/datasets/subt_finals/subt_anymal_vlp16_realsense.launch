<launch>
  <!-- Dataset params -->
  <arg name="use_batch_mode"
       default="false"
       doc="Whether to process the rosbag in batch mode or replay the rosbag."/>
  <arg name="anymal_name"
       default="caiman"/>

  <!-- Wavemap params -->
  <arg name="param_file" if="$(eval anymal_name == 'caiman')"
       value="$(find wavemap_3d_ros)/config/subt_finals/caiman_vlp16_realsense.yaml"/>
  <arg name="param_file" if="$(eval anymal_name == 'camel')"
       value="$(find wavemap_3d_ros)/config/subt_finals/camel_vlp16_realsense.yaml"/>

  <!-- Select the rosbag paths -->
  <!-- NOTE: Relative paths will be resolved w.r.t. ROS_HOME (default ~/.ros) -->
  <arg if="$(eval anymal_name == 'caiman')" name="rosbag_path"
       value="../data/darpa/finals/caiman/2021-09-23-16-41-57_anymal-caiman_mission.bag"/>
  <arg if="$(eval anymal_name == 'camel')" name="rosbag_path"
       value="../data/darpa/finals/camel/2021-09-23-16-38-09_anymal-camel_mission.bag"/>

  <!-- Calibrations -->
  <group if="$(eval anymal_name == 'caiman')">
    <node pkg="tf"
          type="static_transform_publisher"
          name="static_tf_imu_sensor_frame_to_lidar"
          args="-0.005 -0.037 -0.063 0.000 0.000 -0.016 1.000
            imu_sensor_frame lidar 100"/>
    <node pkg="tf"
          type="static_transform_publisher"
          name="static_tf_imu_sensor_frame_to_realsense_front"
          args="0.005 0.810 -0.248 0.869 -0.016 0.007 -0.494
            imu_sensor_frame depth_camera_front_depth_optical_frame 100"/>
    <node pkg="tf"
          type="static_transform_publisher"
          name="static_tf_imu_sensor_frame_to_realsense_left"
          args="-0.093 0.312 -0.189 0.621 0.600 -0.351 -0.361
            imu_sensor_frame depth_camera_left_depth_optical_frame 100"/>
    <node pkg="tf"
          type="static_transform_publisher"
          name="static_tf_imu_sensor_frame_to_realsense_rear"
          args="0.008 -0.157 -0.248 0.014 0.873 -0.488 -0.008
            imu_sensor_frame depth_camera_rear_depth_optical_frame 100"/>
    <node pkg="tf"
          type="static_transform_publisher"
          name="static_tf_imu_sensor_frame_to_right"
          args="0.106 0.341 -0.189 -0.598 0.620 -0.364 0.354
            imu_sensor_frame depth_camera_right_depth_optical_frame 100"/>
  </group>
  <group if="$(eval anymal_name == 'camel')">
    <!-- TODO(victorr): Add calibrations for camel -->
  </group>

  <!-- Republish LiDAR packets as pointcloud msgs and odom msgs as TFs -->
  <group unless="$(arg use_batch_mode)">
    <!-- Configure Velodyne VLP16 -->
    <arg name="calibration"
         default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
    <arg name="manager" default="velodyne_nodelet_manager"/>
    <remap from="/velodyne_packets" to="/lidar/packets"/>

    <!-- Start Velodyne packet to pointcloud converter (incl. undistortion) -->
    <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager"
          output="screen"/>
    <include file="$(find velodyne_pointcloud)/launch/transform_nodelet.launch">
      <arg name="model" value="VLP16"/>
      <arg name="calibration" value="$(arg calibration)"/>
      <arg name="manager" value="$(arg manager)"/>
      <arg name="fixed_frame" value="odom"/>
      <arg name="target_frame" value="lidar"/>
      <arg name="max_range" default="130.0"/>
      <arg name="min_range" default="0.4"/>
      <arg name="organize_cloud" value="false"/>
    </include>

    <!-- Publish odometry as TF -->
    <node pkg="wavemap_3d_ros" type="odom_msg_to_tf.py" name="odom_to_tf"
          output="screen">
      <param name="odom_topic"
             value="/msf_loam_alphasense_imu/msf_core/odometry"/>
      <param name="odom_frame" value="odom"/>
      <param name="sensor_frame" value="imu_sensor_frame"/>
    </node>
  </group>

  <!-- Run wavemap -->
  <include file="$(find wavemap_3d_ros)/launch/datasets/dataset_base.launch"
           pass_all_args="true"/>
</launch>
