name: 'Setup catkin_ws and install deps'
description: 'Setup the catkin workspace and install all system and package dependencies'
inputs:
  catkin-config-args:
    description: 'Catkin config args'
    required: true

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        echo "::group::Environment info"
        uname -r && lsb_release -a
        echo "::endgroup::"

    - shell: bash
      run: |
        echo "::group::Install general and ROS-related APT packages"
        apt-get update
        apt-get install -y git tree python3-catkin-tools python3-vcstool
        echo "::endgroup::"

    - shell: bash
      env:
        DEBIAN_FRONTEND: noninteractive  # For rosdep
      run: |
        echo "::group::Create catkin_ws and install package dependencies"
        mkdir -p ${{ env.CATKIN_WS_PATH }}/src
        cd ${{ env.CATKIN_WS_PATH }}
        ln -s $GITHUB_WORKSPACE src
        source /opt/ros/noetic/setup.bash
        catkin init
        catkin config ${{ inputs.catkin-config-args }}
        echo "::group::Import from-source dependencies with vcstool"
        vcs import --recursive --input src/wavemap/wavemap_https.yml src
        echo "::endgroup::"
        echo "::group::Install system dependencies with rosdep"
        rosdep update
        rosdep install --from-paths src --ignore-src --skip-keys="numpy_eigen catkin_boost_python_buildtool" -y
        echo "::endgroup::"
        echo "::group::Bootstrap catkin build"
        # Build any small package to create catkin_ws/devel/setup.bash, removing the need
        # to source /opt/ros/noetic/setup.bash before the future first "real" catkin build call
        catkin build catkin_simple --no-status
        echo "::endgroup::"

    # TODO(victorr): Fix this upstream
    - shell: bash
      run: |
        echo "::group::Manually install opencv_viz (missing opencv3 dependency)"
        apt-get install -y libopencv-viz-dev
        echo "::endgroup::"

    - shell: bash
      working-directory: ${{ env.CATKIN_WS_PATH }}
      run: |
        echo "::group::Show the workspace tree"
        pwd && tree -l
        echo "::endgroup::"
